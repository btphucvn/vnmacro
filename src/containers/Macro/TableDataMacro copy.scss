.table-data{
    
  overflow-x:auto;
      
      table {
        border-collapse: collapse;
        
      }
      
      caption {
        text-align: left;
        font-style: italic;
        padding: 0.25em 0.5em 0.5em 0.5em;
      }
      
      th,
      td {
        padding: 0.25em 0.25em 0.25em 0.25em;


      }
      .td-column-title{
        min-width: 250px;
      }
      .td-column-value{
        min-width: 100px;
        text-align: right;
      }
      .header-table{
        text-align: right;
      }
      th {
        vertical-align: bottom;
        background-color: rgba(0, 0, 0, 0.75);
        color: #fff;
        font-weight: bold;
        
      }
      
      .td-toggle{
        max-width: 20px;
        padding: 0.1em 0.25em 0.25em 0.25em;
      }
      
      td[colspan] {
        background-color: #eee;
        color: #000;
        font-weight: normal;
        font-style: italic;
        padding: 0;
        text-indent: 0;
      }
      
      tr.shown, tr.hidden {
        //background-color: #eee;
        display: table-row;
      }
      
      .padding-child-row{
        padding: 0.25em 0.25em 0.25em 2.25em;
        font-style: italic;
      }
      .bold-general{
        font-weight: 700;
      }
      tr.hidden {
        display: none;
      }
      
      .row button {
        background-color: transparent;
        border: .1em solid transparent;
        font: inherit;
        padding: 0.25em 0.5em 0.25em .25em;
        width: 100%;
        text-align: left;
      }
      
      .row button:focus, .row button:hover {
        background-color: #ddd;
        outline: .2em solid #00f;
      }
      
      .row button svg {
        width: .8em;
        height: .8em;
        margin: 0 0 -.05em 0;
        fill: #66f;
        transition: transform 0.25s ease-in;
        transform-origin: center 45%;
      }
      button{
        background-color: white;
      }
      .row button:hover svg,
      .row button:focus svg {
        fill: #00c;
      }
      
      /* Lean on programmatic state for styling */
      .row button[aria-expanded="true"] svg {
        transform: rotate(180deg);
      }
      
      .cell button {
        font-size: 60%;
        color: #000;
        padding: 0.3em 0.2em 0 0.2em;
        border: none;
        line-height: 1;
        text-align: center;
        text-indent: 0;
        transform: rotate(270deg);
      }
      
      .cell button svg {
        width: 1.25em;
        height: 1.25em;
        fill: gray;
        transition: transform 0.25s ease-in;
        transform-origin: center 45%;
      }
      
      .cell button:hover,
      .cell button:focus {
        background-color: #fff;
        outline: none;
      }
      
      .cell button:hover svg,
      .cell button:focus svg {
        fill: #000;
      }
      
      /* Lean on programmatic state for styling */
      .cell button[aria-expanded="true"] svg {
        transform: rotate(90deg);
      }
      
      /* Proven method to visually hide something but */
      /* still make it available to assistive technology */
      .visually-hidden {
        position: absolute;
        top: auto;
        overflow: hidden;
        clip: rect(1px 1px 1px 1px); /* IE 6/7 */
        clip: rect(1px, 1px, 1px, 1px);
        width: 1px;
        height: 1px;
        white-space: nowrap;
      }
}