{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","utils/constant.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomScrollbars.js","components/CustomToast.js","components/Chart/ChartRatio.js","axios.js","services/StockMacroService.js","containers/StockMacro/StockMacro.js","containers/Header/Header.js","store/actions/adminActions.js","components/Navigator.js","containers/Header/menuApp.js","containers/Macro/ChartMacro.js","containers/Macro/ItemChart.js","services/MacroTypeService.js","containers/Macro/MacroData.js","services/TableService.js","containers/Macro/TableDataMacro.js","containers/Macro/Macro.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","ADMIN_LOGIN_SUCCESS","ADMIN_LOGIN_FAIL","PROCESS_LOGOUT","ADD_USER_SUCCESS","initialState","started","language","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","action","type","isLoggedIn","adminInfo","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","adminPersistConfig","key","whitelist","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","admin","persistReducer","adminReducer","user","userReducer","app","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","path","CommonUtils","number","x","toString","replace","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","CustomScrollbars","ref","React","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","props","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","className","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","this","disableVerticalScroll","disableHorizontalScroll","children","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","Component","ChartRatio","updateChartWidth","console","log","window","innerWidth","containerId","chartID","chartPE","lineSeries","removeSeries","addLineSeries","setData","dataChart","setState","prevProps","prevState","snapshot","createChart","width","height","grid","vertLines","horzLines","rightPriceScale","visible","leftPriceScale","color","lineWidth","remove","id","connect","instance","axios","create","baseURL","withCredentials","createError","httpStatusCode","statusCode","errorMessage","problems","errorCode","error","Error","interceptors","response","use","data","hasOwnProperty","s","statusType","toUpperCase","isSuccessStatusCode","Promise","reject","status","_","length","getMarketRatio","inputId","get","getFinishedProfitPlan","StockMacro","formatSelectOptions","selectOptions","options","i","option","label","vietnameseName","push","handleOnChangeSelect","selectedOption","a","finishedProfitPlan","pe","dataChartPE","pb","dataChartPB","numberOfStock","postTaxProfitPlan","numberWithCommas","Math","round","postTaxProfit","finishedPercent","addEventListener","selectOptionsData","defaultValue","onChange","role","aria-valuenow","aria-valuemin","aria-valuemax","style","Header","processLogout","aria-current","href","MenuGroup","name","linkGroup","onLinkClick","Menu","active","link","onClick","hasSubMenu","data-toggle","aria-expanded","to","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","withRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","toggle","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","map","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRef","withRef","adminMenu","Macro","IteamChart","count","handleOnClickDelete","handleChangeColor","event","target","items","Array","from","v","k","primary","secondary","undefined","onDragEnd","bind","result","destination","list","startIndex","endIndex","splice","removed","reorder","source","index","droppableId","provided","RootRef","rootRef","innerRef","List","isDraggingOver","item","draggableId","ListItem","ContainerComponent","ContainerProps","draggableProps","dragHandleProps","isDragging","draggableStyle","background","ListItemText","ListItemSecondaryAction","placeholder","getMacroTypeByKeyIDMacro","keyIDMacro","getValueTypeByKeyIDMactoType","MacroData","handleOnClickNav","selected","keySelected","keyID","idMacro","dataNav","match","params","errCode","arrDataNav","title","getTableByKeyIDMactoType","keyIDMacroType","valueType","TableDataMacro","eIDs","includes","btnID","currentTarget","theRows","document","querySelectorAll","theButton","getElementById","getAttribute","classList","add","setAttribute","handleRadioChange","dataTable","selectedRadio","handleSearch","filter","tr","td","getElementsByTagName","textContent","innerText","indexOf","display","handleOnClickRow","valueTypes","classHidden","valueTypeIndex","checked","dataTableIndex","headerTable","header","class","names","nameVi","headerTableIndex","rows","rowLevel1","indexRow","indexData","parseFloat","toFixed","rowLevel2","idChild","rowLevel3","ChartMacro","component","App","handlePersistorState","getState","bootstrapped","onBeforeLift","resolve","then","catch","exact","Boolean","hostname","getFlattenedMessages","IntlProviderWrapper","locale","defaultLocale","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.400ca15b.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\n    //app\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\n\n    //admin\n    ADMIN_LOGIN_SUCCESS: 'ADMIN_LOGIN_SUCCESS',\n    ADMIN_LOGIN_FAIL: 'ADMIN_LOGIN_FAIL',\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\n\n    //user\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\n})\n\nexport default actionTypes;","import actionTypes from '../actions/actionTypes';\n\nconst initContentOfConfirmModal = {\n    isOpen: false,\n    messageId: \"\",\n    handleFunc: null,\n    dataFunc: null\n}\n\nconst initialState = {\n    started: true,\n    language: 'vi',\n    systemMenuPath: '/system/user-manage',\n    contentOfConfirmModal: {\n        ...initContentOfConfirmModal\n    }\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.APP_START_UP_COMPLETE: \n            return {\n                ...state,\n                started: true\n            }\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL: \n            return {\n                ...state,\n                contentOfConfirmModal: {\n                    ...state.contentOfConfirmModal,\n                    ...action.contentOfConfirmModal\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isLoggedIn: false,\n    adminInfo: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADMIN_LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                adminInfo: action.adminInfo\n            }\n        case actionTypes.ADMIN_LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                adminInfo: null\n            }\n        case actionTypes.PROCESS_LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                adminInfo: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;","import {combineReducers} from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport appReducer from \"./appReducer\";\nimport adminReducer from \"./adminReducer\";\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst persistCommonConfig = {\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n};\n\nconst adminPersistConfig = {\n    ...persistCommonConfig,\n    key: 'admin',\n    whitelist: ['isLoggedIn', 'adminInfo']\n};\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    admin: persistReducer(adminPersistConfig, adminReducer),\n    user: userReducer,\n    app: appReducer\n})","import { logger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createStateSyncMiddleware } from 'redux-state-sync';\nimport { persistStore } from 'redux-persist';\n\nimport createRootReducer from './store/reducers/rootReducer';\nimport actionTypes from './store/actions/actionTypes';\n\nconst environment = process.env.NODE_ENV || \"development\";\nlet isDevelopment = environment === \"development\";\n\n//hide redux logs\nisDevelopment = false;\n\n\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\n\nconst reduxStateSyncConfig = {\n    whitelist: [\n        actionTypes.APP_START_UP_COMPLETE,\n    ]\n}\n\nconst rootReducer = createRootReducer(history);\nconst middleware = [\n    routerMiddleware(history),\n    thunkMiddleware,\n    createStateSyncMiddleware(reduxStateSyncConfig),\n]\nif (isDevelopment) middleware.push(logger);\n\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst reduxStore = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware)),\n)\n\nexport const dispatch = reduxStore.dispatch;\n\nexport const persistor = persistStore(reduxStore);\n\nexport default reduxStore;","export const path = {\n    HOME: '/',\n    LOGIN: '/login',\n    LOG_OUT: '/logout',\n    SYSTEM: '/system',\n    GDP: '/gdp-viet-nam-theo-nam',\n    MACRO: '/vi-mo',\n\n};\n\nexport const languages = {\n    VI: 'vi',\n    EN: 'en'\n};\n\nexport const manageActions = {\n    ADD: \"ADD\",\n    EDIT: \"EDIT\",\n    DELETE: \"DELETE\"\n};\n\nexport const dateFormat = {\n    SEND_TO_SERVER: 'DD/MM/YYYY'\n};\n\nexport const YesNoObj = {\n    YES: 'Y',\n    NO: 'N'\n}","class CommonUtils {\n    static isNumber1 (number) {\n        if (number === 1) return true;\n        return false;\n    }\n    static numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n}\n\nexport default CommonUtils;","class KeyCodeUtils {\n\n    static UP = 38;\n\n    static DOWN = 40;\n\n    static TAB = 9;\n\n    static ENTER = 13;\n\n    static E = 69;\n\n    static ESCAPE = 27; \n\n    static isNavigation(e) {\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\n    }\n\n    static isNumeric(e) {\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\n    }\n    static isAlphabetic(e) {\n        return (e >= 65 && e <= 90);\n    }\n    static isDecimal(e) {\n        return e === 190 || e === 188 || e === 108 || e === 110;\n    }\n\n    static isDash(e) {\n        return e === 109 || e === 189;\n    }\n}\n\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\nimport messages_en from '../translations/en.json';\n\nconst flattenMessages = ((nestedMessages, prefix = '') => {\n    if (nestedMessages == null) {\n        return {}\n    }\n    return Object.keys(nestedMessages).reduce((messages, key) => {\n        const value = nestedMessages[key];\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n        if (typeof value === 'string') {\n            Object.assign(messages, {[prefixedKey]: value})\n        } else {\n            Object.assign(messages, flattenMessages(value, prefixedKey))\n        }\n\n        return messages\n    }, {})\n});\n\nconst messages = {\n    'vi': flattenMessages(messages_vi),\n    'en': flattenMessages(messages_en),\n};\n\nexport default class LanguageUtils {\n    static getMessageByKey(key, lang) {\n        return messages[lang][key]\n    }\n\n    static getFlattenedMessages() {\n        return messages;\n    }\n}","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport './CustomScrollbars.scss';\n\nclass CustomScrollbars extends Component {\n\n    ref = React.createRef();\n\n    getScrollLeft =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollLeft();\n    }\n    getScrollTop =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollTop();\n    }\n\n    scrollToBottom = () => {\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const targetScrollTop = scrollbars.getScrollHeight();\n        this.scrollTo(targetScrollTop);\n    };\n\n    scrollTo = (targetTop) => {\n        const { quickScroll } = this.props;\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const originalTop = scrollbars.getScrollTop();\n        let iteration = 0;\n\n        const scroll = () => {\n            iteration++;\n            if (iteration > 30) {\n                return;\n            }\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\n\n            if (quickScroll && quickScroll === true) {\n                scroll();\n            } else {\n                setTimeout(() => {\n                    scroll();\n                }, 20);\n            }\n        };\n\n        scroll();\n    };\n\n    renderTrackHorizontal = (props) => {\n        return (\n            <div {...props} className=\"track-horizontal\" />\n        );\n    };\n\n    renderTrackVertical = (props) => {\n        return (\n            <div {...props} className=\"track-vertical\" />\n        );\n    };\n\n    renderThumbHorizontal = (props) => {\n        return (\n            <div {...props} className=\"thumb-horizontal\" />\n        );\n    };\n\n    renderThumbVertical = (props) => {\n        return (\n            <div {...props} className=\"thumb-vertical\" />\n        );\n    };\n\n    renderNone = (props) => {\n        return (\n            <div />\n        );\n    };\n\n    render() {\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\n        return (\n            <Scrollbars\n                ref={this.ref}\n                autoHide={true}\n                autoHideTimeout={200}\n                hideTracksWhenNotNeeded={true}\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\n                {...otherProps}\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\n            >\n                {children}\n            </Scrollbars>\n        );\n    }\n}\n\nexport default CustomScrollbars;","import React, { Component, Fragment } from 'react';\nimport { FormattedMessage, FormattedTime } from 'react-intl';\n\nimport CustomScrollBar from '../components/CustomScrollbars';\n\nimport './CustomToast.scss';\n\nclass CustomToast extends Component {\n\n    render() {\n        const { titleId, message, messageId, time } = this.props;\n        return (\n            <Fragment>\n                <div className=\"custom-toast\">\n                    <div className=\"toast-title\">\n                        {time && (\n                            <span className=\"date\">\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\n                            </span>\n                        )}\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\n                        <FormattedMessage id={titleId} />\n                    </div>\n                    {\n                        (message && typeof message === 'object') ?\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\n                                {\n                                    message.map((msg, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <div className=\"toast-content\">{msg}</div>\n                                            </Fragment>\n                                        )\n                                    })\n                                }\n                            </CustomScrollBar> :\n                            <div className=\"toast-content\">\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\n                            </div>\n                    }\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport class CustomToastCloseButton extends Component {\n\n    render() {\n        return (\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\n                <i className=\"fa fa-fw fa-times-circle\" />\n            </button>\n        );\n    }\n}\n\nexport default CustomToast;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createChart } from 'lightweight-charts';\r\n\r\n\r\n\r\n\r\nclass ChartRatio extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(this.props.dataChart);\r\n        this.state = {\r\n            containerId: this.props.chartID,\r\n            chartPE: null,\r\n            lineSeries: null\r\n        }\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.state.chartPE.removeSeries(this.state.lineSeries);\r\n        const lineSeries = this.state.chartPE.addLineSeries();\r\n        lineSeries.setData(props.dataChart);\r\n        this.setState({\r\n            lineSeries: lineSeries\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        const chartPE = createChart(this.state.containerId,\r\n            {\r\n                width: window.innerWidth * 0.45,\r\n                height: 300,\r\n                grid: {\r\n                    vertLines: false,\r\n                    horzLines: false,\r\n                },\r\n                rightPriceScale: {\r\n                    visible: true,\r\n                },\r\n                leftPriceScale: {\r\n                    visible: false,\r\n                },\r\n            });\r\n\r\n        const lineSeries = chartPE.addLineSeries({\r\n            color: '#185ba8',\r\n            lineWidth: 2,\r\n        });\r\n\r\n        lineSeries.setData(this.props.dataChart);\r\n\r\n\r\n        this.setState({\r\n            chartPE: chartPE,\r\n            lineSeries: lineSeries\r\n        })\r\n\r\n    }\r\n    updateChartWidth=()=>{\r\n        console.log(window.innerWidth);\r\n        //chart.applyOptions({ height: document.getElementById(\"chartPE\").offsetHeight, width: document.getElementById(\"center-vnindex\").offsetWidth });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.state.chartPE !== null) {\r\n            this.state.chartPE.remove();\r\n            this.state.chartPE = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <div\r\n                    id={this.state.containerId}\r\n                    className={this.props.chartID}\r\n                />\r\n\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartRatio);\r\n","import axios from 'axios';\nimport _ from 'lodash';\nimport config from './config';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL,\n    withCredentials: true\n});\n\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n    const error = new Error();\n    error.httpStatusCode = httpStatusCode;\n    error.statusCode = statusCode;\n    error.errorMessage = errorMessage;\n    error.problems = problems;\n    error.errorCode = errorCode + \"\";\n    return error;\n};\n\nexport const isSuccessStatusCode = (s) => {\n    // May be string or number\n    const statusType = typeof s;\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\n};\n\ninstance.interceptors.response.use(\n    (response) => {\n        // Thrown error for request with OK status code\n        const { data } = response;\n        if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n            return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n        }\n\n        // Return direct data to callback\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n            return data['d'];\n        }\n        // Handle special case\n        if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n            return null;\n        }\n        return response.data;\n    },\n    (error) => {\n        const { response } = error;\n        if (response == null) {\n            return Promise.reject(error);\n        }\n\n        const { data } = response;\n\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n            return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n        }\n\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n            return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n        }\n\n        return Promise.reject(createError(response.status));\n    }\n);\n\nexport default instance;\n","import axios from \"../axios\"\r\n\r\n\r\n\r\nconst getAllSelect=(inputId)=>{\r\n    return axios.get(`/api/get-all-select`);\r\n}\r\nconst getMarketRatio=(inputId)=>{\r\n    return axios.get(`/api/get-market-ratio-by-code?code=${inputId}`);\r\n}\r\nconst getFinishedProfitPlan=(inputId)=>{\r\n    return axios.get(`/api/get-finished-profit-plan?id=${inputId}`);\r\n}\r\nexport { getAllSelect,\r\n    getMarketRatio,\r\n    getFinishedProfitPlan\r\n }","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport \"./StockMacro.scss\";\r\nimport ChartRatio from '../../components/Chart/ChartRatio';\r\nimport { getAllSelect, getMarketRatio, getFinishedProfitPlan } from '../../services/StockMacroService'\r\nimport CommonUtils from '../../utils/CommonUtils';\r\n\r\n\r\n\r\n\r\nclass StockMacro extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataChartPE: null,\r\n            dataChartPB: null,\r\n            selectOptions: null,\r\n            numberOfStock: 0,\r\n            postTaxProfit: \"N/A\",\r\n            postTaxProfitPlan: \"N/A\",\r\n            finishedPercent: \"N/A\"\r\n        }\r\n    }\r\n\r\n    formatSelectOptions = (selectOptions) => {\r\n        let options = [];\r\n        for (let i = 0; i < selectOptions.length; i++) {\r\n            let option = {};\r\n            option.value = selectOptions[i].id;\r\n            option.label = selectOptions[i].vietnameseName;\r\n            options.push(option);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.addEventListener('resize', this.updateChartWidth);\r\n        const selectOptionsData = await getAllSelect();\r\n        const selectOptions = this.formatSelectOptions(selectOptionsData.data);\r\n        const data = await getMarketRatio(\"VNINDEX\");\r\n        const finishedProfitPlan = await getFinishedProfitPlan(\"VNINDEX\");\r\n\r\n        const dataChartPE = data.pe;\r\n        const dataChartPB = data.pb;\r\n        if (dataChartPE) {\r\n            this.setState({\r\n                dataChartPE: dataChartPE,\r\n            })\r\n        }\r\n        if (dataChartPB) {\r\n            this.setState({\r\n                dataChartPB: dataChartPB,\r\n            })\r\n        }\r\n\r\n        if (selectOptions) {\r\n            this.setState({\r\n                selectOptions: selectOptions,\r\n            })\r\n        }\r\n        this.setState({\r\n            numberOfStock: finishedProfitPlan.data.numberOfStock,\r\n        })\r\n\r\n        if (finishedProfitPlan.data.postTaxProfitPlan != null) {\r\n            this.setState({\r\n                postTaxProfitPlan: CommonUtils.numberWithCommas(Math.round(finishedProfitPlan.data.postTaxProfitPlan / 1000000000, 0)),\r\n            })\r\n        }\r\n        if (finishedProfitPlan.data.postTaxProfit) {\r\n            this.setState({\r\n                postTaxProfit: CommonUtils.numberWithCommas(Math.round(finishedProfitPlan.data.postTaxProfit / 1000000000, 0)),\r\n            })\r\n        }\r\n        if (finishedProfitPlan.data.finishedPercent) {\r\n            this.setState({\r\n                finishedPercent: finishedProfitPlan.data.finishedPercent,\r\n            })\r\n        }\r\n    }\r\n\r\n    updateChartWidth = () => {\r\n        console.log(window.innerWidth);\r\n        //chart.applyOptions({ height: document.getElementById(\"chartPE\").offsetHeight, width: document.getElementById(\"center-vnindex\").offsetWidth });\r\n\r\n    }\r\n\r\n    handleOnChangeSelect = async (selectedOption) => {\r\n        const finishedProfitPlan = await getFinishedProfitPlan(selectedOption.value);\r\n        let response = await getMarketRatio(selectedOption.value);\r\n        if (response.pe) {\r\n            this.setState({\r\n                dataChartPE: response.pe,\r\n            })\r\n        }\r\n        if (response.pb) {\r\n            this.setState({\r\n                dataChartPB: response.pb,\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            numberOfStock: finishedProfitPlan.data.numberOfStock,\r\n        })\r\n\r\n        if (finishedProfitPlan.data.postTaxProfitPlan != null) {\r\n            this.setState({\r\n                postTaxProfitPlan: CommonUtils.numberWithCommas(Math.round(finishedProfitPlan.data.postTaxProfitPlan / 1000000000, 0)),\r\n            })\r\n        }\r\n        if (finishedProfitPlan.data.postTaxProfit) {\r\n            this.setState({\r\n                postTaxProfit: CommonUtils.numberWithCommas(Math.round(finishedProfitPlan.data.postTaxProfit / 1000000000, 0)),\r\n            })\r\n        }\r\n        if (finishedProfitPlan.data.finishedPercent) {\r\n            this.setState({\r\n                finishedPercent: finishedProfitPlan.data.finishedPercent,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"stock-macro-container\">\r\n                    <div className='select-index'>\r\n                        <Select\r\n                            options={this.state.selectOptions}\r\n                            className=\"select\"\r\n                            defaultValue={{ value: 'VNINDEX', label: 'VNINDEX' }}\r\n                            onChange={this.handleOnChangeSelect}\r\n                        />\r\n                    </div>\r\n                    <div className='ratio-container'>\r\n                        <div className=\"pe-container\">\r\n                            <h2 className=\"pe-span\">PE</h2>\r\n\r\n                            {\r\n                                this.state.dataChartPE &&\r\n                                <ChartRatio\r\n                                    chartID=\"chartPE\"\r\n                                    dataChart={this.state.dataChartPE}\r\n                                />\r\n\r\n                            }\r\n                        </div>\r\n                        <div className=\"pb-container\">\r\n                            <div className=\"pb-span\">PB</div>\r\n                            {\r\n                                this.state.dataChartPB &&\r\n                                <ChartRatio\r\n                                    chartID=\"chartPB\"\r\n                                    dataChart={this.state.dataChartPB}\r\n                                />\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='plan-and-leverage-container'>\r\n                        <div className=\"plan-profit-container\">\r\n                            <div className=\"title-plan-profit-container\">\r\n                                <h2 className=\"title-plan\">Kế hoạch năm 2022</h2>\r\n\r\n\r\n                            </div>\r\n                            <div className='plan-profit'>\r\n\r\n                                <div className='table-plan-profit'>\r\n                                    <table className=\"table\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Số lượng cổ phiếu khảo sát</td>\r\n                                                <td>{this.state.numberOfStock}</td>\r\n\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Tổng lợi nhuận sau thuế đã thực hiện</td>\r\n                                                <td>{this.state.postTaxProfit}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Tổng lợi nhuận sau thuế kế hoạch</td>\r\n                                                <td>{this.state.postTaxProfitPlan}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Tiến độ đã thực hiện được</td>\r\n                                                <td>{this.state.finishedPercent}%</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"money-type\">Đơn vị tỷ đồng</td>\r\n                                               \r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"progress-plan-profit\">\r\n                                    <div className=\"progress-container\">\r\n                                        <div className=\"progress progress-bar-vertical\">\r\n                                            <div className=\"progress-bar progress-bar-success progress-bar-striped active\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ \"height\":  this.state.finishedPercent}}>\r\n                                                <span>{this.state.finishedPercent}%</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='title-progress'>Tiến độ hoàn thành kế hoạch 2022</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='leverage-container'>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StockMacro);\r\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from \"../../store/actions\";\n\nimport './Header.scss';\nimport { path } from '../../utils';\n\nclass Header extends Component {\n\n    render() {\n        const { processLogout } = this.props;\n\n        return (\n            // <div className=\"header-container\">\n            //     {/* thanh navigator */}\n            //     {/* <div className=\"header-tabs-container\">\n            //         <Navigator menus={adminMenu} />\n\n            //     </div> */}\n\n            // </div>\n            <Fragment>\n                <nav className=\"navbar navbar-expand-lg navbar-light navigator-bar-container\">\n                    <div className=\"container-fluid\">\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">TỔNG QUAN</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" href={path.MACRO}>VĨ MÔ</a>\n                                </li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </Fragment>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.admin.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        processLogout: () => dispatch(actions.processLogout()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import actionTypes from './actionTypes';\n\nexport const adminLoginSuccess = (adminInfo) => ({\n    type: actionTypes.ADMIN_LOGIN_SUCCESS,\n    adminInfo: adminInfo\n})\n\nexport const adminLoginFail = () => ({\n    type: actionTypes.ADMIN_LOGIN_FAIL\n})\n\nexport const processLogout = () => ({\n    type: actionTypes.PROCESS_LOGOUT\n})","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './Navigator.scss';\n\nclass MenuGroup extends Component {\n\n    render() {\n        const { name, children, linkGroup,onLinkClick } = this.props;\n        return (\n            <Fragment>\n                <li className=\"menu-group\">\n                    <div className=\"menu-group-name\">\n                        <FormattedMessage id={name} />\n                    </div>\n                    <ul className=\"menu-list list-unstyled\">\n                        {children}\n                    </ul>\n                    {/* <Link to={linkGroup} className=\"menu-group-name\" onClick={onLinkClick}>\n                        <FormattedMessage id={name} />\n                    </Link>\n                    <ul className=\"menu-list list-unstyled\">\n                        {children}\n                    </ul> */}\n                </li>\n\n            </Fragment>\n        );\n    }\n}\n\nclass Menu extends Component {\n\n    render() {\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\n\n        return (\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\n                {hasSubMenu ? (\n                    <Fragment>\n                        <span\n                            data-toggle=\"collapse\"\n                            className={\"menu-link collapsed\"}\n                            onClick={onClick}\n                            aria-expanded={\"false\"}\n                        >\n                            <FormattedMessage id={name} />\n                            <div className=\"icon-right\">\n                                <i className={\"far fa-angle-right\"} />\n                            </div>\n                        </span>\n                        <div>\n                            <ul className=\"sub-menu-list list-unstyled\">\n                                {children}\n                            </ul>\n                        </div>\n                    </Fragment>\n                ) : (\n                    <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\n                        <FormattedMessage id={name} />\n                    </Link>\n                )}\n            </li>\n        );\n    }\n}\n\nclass SubMenu extends Component {\n\n    getItemClass = path => {\n        return this.props.location.pathname === path ? \"active\" : \"\";\n    };\n\n    render() {\n        const { name, link, onLinkClick } = this.props;\n        return (\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\n                    <FormattedMessage id={name} />\n                </Link>\n            </li>\n        );\n    }\n}\n\nconst MenuGroupWithRouter = withRouter(MenuGroup);\nconst MenuWithRouter = withRouter(Menu);\nconst SubMenuWithRouter = withRouter(SubMenu);\n\nconst withRouterInnerRef = (WrappedComponent) => {\n\n    class InnerComponentWithRef extends React.Component {\n        render() {\n            const { forwardRef, ...rest } = this.props;\n            return <WrappedComponent {...rest} ref={forwardRef} />;\n        }\n    }\n\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\n\n    return React.forwardRef((props, ref) => {\n        return <ComponentWithRef {...props} forwardRef={ref} />;\n    });\n};\n\nclass Navigator extends Component {\n    state = {\n        expandedMenu: {}\n    };\n\n    toggle = (groupIndex, menuIndex) => {\n        const expandedMenu = {};\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\n        if (needExpand) {\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\n        }\n\n        this.setState({\n            expandedMenu: expandedMenu\n        });\n    };\n\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\n        if (subMenus) {\n            if (subMenus.length === 0) {\n                return false;\n            }\n\n            const currentPath = location.pathname;\n            for (let i = 0; i < subMenus.length; i++) {\n                const subMenu = subMenus[i];\n                if (subMenu.link === currentPath) {\n                    return true;\n                }\n            }\n        }\n\n        if (link) {\n            return this.props.location.pathname === link;\n        }\n\n        return false;\n    };\n\n\n    checkActiveMenu = () => {\n        const { menus, location } = this.props;\n        outerLoop:\n        for (let i = 0; i < menus.length; i++) {\n            const group = menus[i];\n            if (group.menus && group.menus.length > 0) {\n                for (let j = 0; j < group.menus.length; j++) {\n                    const menu = group.menus[j];\n                    if (menu.subMenus && menu.subMenus.length > 0) {\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\n                            const key = i + '_' + j;\n                            this.setState({\n                                expandedMenu: {\n                                    [key]: true\n                                }\n                            });\n                            break outerLoop;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.checkActiveMenu();\n    };\n\n    // componentWillReceiveProps(nextProps, prevState) {\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\n    //     const { location: nextLocation } = nextProps;\n    //     if (location !== nextLocation) {\n    //         let pathname = nextLocation && nextLocation.pathname;\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\n    //             setAccountMenuPath(pathname);\n    //         }\n    //         if (pathname.startsWith('/settings/')) {\n    //             setSettingMenuPath(pathname);\n    //         };\n    //     };\n    // };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { location } = this.props;\n        const { location: prevLocation } = prevProps;\n        if (location !== prevLocation) {\n            this.checkActiveMenu();\n        };\n    };\n\n    render() {\n        const { menus, location, onLinkClick } = this.props;\n        return (\n            <Fragment>\n                <ul className=\"navigator-menu list-unstyled\">\n                    {\n                        menus.map((group, groupIndex) => {\n                            return (\n                                <Fragment key={groupIndex}>\n                                    <MenuGroupWithRouter name={group.name} linkGroup={group.linkGroup} >\n                                        {group.menus ? (\n                                            group.menus.map((menu, menuIndex) => {\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\n                                                return (\n                                                    <MenuWithRouter\n                                                        key={menuIndex}\n                                                        active={isMenuHasSubMenuActive}\n                                                        name={menu.name}\n                                                        link={menu.link}\n                                                        hasSubMenu={menu.subMenus}\n                                                        isOpen={isSubMenuOpen}\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\n                                                        onLinkClick={onLinkClick}\n                                                    >\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\n                                                            <SubMenuWithRouter\n                                                                key={subMenuIndex}\n                                                                name={subMenu.name}\n                                                                link={subMenu.link}\n                                                                onClick={this.closeOtherExpand}\n                                                                onLinkClick={onLinkClick}\n                                                            />\n                                                        ))}\n                                                    </MenuWithRouter>\n                                                );\n                                            })\n                                        ) : null}\n                                    </MenuGroupWithRouter>\n                                </Fragment>\n                            );\n                        })\n                    }\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\n","import { path } from '../../utils'\n\nexport const adminMenu = [\n    // { //hệ thống\n    //     // name: 'menu.system.header', menus: [\n    //     //     {\n    //     //         name: 'menu.system.system-administrator.header',\n    //     //         subMenus: [\n    //     //             { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\n    //     //             { name: 'menu.system.system-administrator.product-manage', link: '/system/product-manage' },\n    //     //             { name: 'menu.system.system-administrator.register-package-group-or-account', link: '/system/register-package-group-or-account' },\n    //     //         ]\n    //     //     },\n    //     //     // { name: 'menu.system.system-parameter.header', link: '/system/system-parameter' },\n    //     // ]\n    // },\n\n    {\n        //hệ thống\n        name: 'header.gdp-title', menus: [\n            {\n                name: 'header.gdp.gdp-year', link: \"/vi-mo/san-luong/gdp-viet-nam-theo-nam\"\n            },\n            {\n                name: 'header.gdp.gdp-compare', link: '/vi-mo/san-luong/gdp-viet-nam-so-sanh'\n            },\n            {\n                name: 'header.gdp.gdp-current', link: '/vi-mo/san-luong/gdp-viet-nam-hien-hanh'\n            },\n            {\n                name: 'header.gdp.gdp-pmi', link: \"/vi-mo/san-luong/chi-so-pmi-viet-nam\"\n            },\n        ]\n    },\n    {\n        //hệ thống\n        name: 'header.consumption-title', menus: [\n            {\n                name: 'header.consumption.cpi', link: '/vi-mo/tieu-dung/chi-so-cpi-viet-nam'\n            },\n            {\n                name: 'header.consumption.retail', link: '/vi-mo/tieu-dung/ban-le-hang-hoa-va-dich-vu'\n            },\n        ]\n    },\n    {\n        //hệ thống\n        name: 'header.invest-title', menus: [\n            {\n                name: 'header.invest.business-registration', link: '/vi-mo/dau-tu/dang-ky-kinh-doanh'\n            },\n            {\n                name: 'header.invest.social-development-investment-capital', link: '/vi-mo/dau-tu/von-dau-tu-phat-trien-xa-hoi'\n            },\n            {\n                name: 'header.invest.investment-from-government', link: '/vi-mo/dau-tu/von-dau-tu-tu-nsnn'\n            },\n        ]\n    },\n    {\n        //hệ thống\n        name: 'header.manufacturing-title', menus: [\n            {\n                name: 'header.manufacturing.iip', link: '/vi-mo/san-xuat/chi-so-ppi-viet-nam'\n            },\n            {\n                name: 'header.manufacturing.product', link: '/vi-mo/san-xuat/san-pham-cong-nghiep'\n            },\n            {\n                name: 'header.manufacturing.price-carriage', link: '/vi-mo/san-xuat/chi-so-van-tai-kho-bai'\n            },\n            {\n                name: 'header.manufacturing.price-input', link: '/vi-mo/san-xuat/chi-so-gia-dau-vao-san-xuat'\n            },\n            {\n                name: 'header.manufacturing.ppi', link: '/vi-mo/san-xuat/chi-so-ppi-viet-nam'\n            },\n        ]\n    },\n];","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Macro extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n \r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Macro);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemSecondaryAction\r\n} from \"@material-ui/core\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\nimport { DragDropContext, Droppable, Draggable }\r\n    from \"react-beautiful-dnd\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport './ItemChart.scss'\r\n\r\n\r\nconst getItems = count =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `item-${k}`,\r\n        primary: `item ${k} `,\r\n        secondary: k % 2 === 0 ? `Whatever for ${k}` : undefined\r\n    }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n        background: \"rgb(235,235,235)\"\r\n    })\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    //background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n});\r\n\r\n\r\nclass IteamChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: getItems(10)\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = reorder(\r\n            this.state.items,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        this.setState({\r\n            items\r\n        });\r\n    }\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n    handleOnClickDelete = () => {\r\n    }\r\n    handleChangeColor = (event) => {\r\n        console.log(event.target.value);\r\n    }\r\n    render() {\r\n        //console.log(this.state.items)\r\n        return (\r\n\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <RootRef rootRef={provided.innerRef}>\r\n                            <List style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {this.state.items.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <ListItem\r\n                                                ContainerComponent=\"li\"\r\n                                                ContainerProps={{ ref: provided.innerRef }}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                <div className=\"content-item\">\r\n                                                    <i className=\"fas fa-chart-line chart-item\"></i>\r\n                                                    <input type=\"color\" onChange={this.handleChangeColor} value=\"#45306c\" ></input>\r\n                                                    <ListItemText\r\n                                                        primary={item.primary}\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <ListItemSecondaryAction>\r\n                                                    <i className=\"far fa-trash-alt\" onClick={this.handleOnClickDelete}></i>\r\n\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </List>\r\n                        </RootRef>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IteamChart);\r\n","import axios from \"../axios\"\r\n\r\n\r\n\r\nconst getMacroTypeByKeyIDMacro = (keyIDMacro) => {\r\n    return axios.get(`/api/get-macro-type?keyIDMacro=${keyIDMacro}`);\r\n}\r\nconst getValueTypeByKeyIDMactoType = (keyIDMacro) => {\r\n    return axios.get(`/api/get-value-type-by-keyidmacrotype?keyIDMacro=${keyIDMacro}`);\r\n}\r\n\r\n\r\nexport {\r\n    getMacroTypeByKeyIDMacro,\r\n    getValueTypeByKeyIDMactoType,\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getMacroTypeByKeyIDMacro } from '../../services/MacroTypeService'\r\n\r\n\r\nclass MacroData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataNav: null,\r\n            selected: -1,\r\n            keySelected: \"\",\r\n            keyID: \"\",\r\n            idMacro: -1,\r\n        }\r\n\r\n    }\r\n    async componentWillReceiveProps(props) {\r\n        if (props.match.params.keyIDMacro == this.props.match.params.keyIDMacro) {\r\n            const dataNav = this.state.dataNav;\r\n            //console.log(props)\r\n            if (dataNav && dataNav.length > 0) {\r\n                dataNav.map((item, index) => {\r\n                    if (item.keyID == props.match.params.keyID) {\r\n                        this.setState({\r\n                            selected: index\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            const data = await getMacroTypeByKeyIDMacro(props.match.params.keyIDMacro);\r\n            const dataNav = data.data;\r\n            if (data.errCode == 0 && data.data.length > 0) {\r\n                this.setState({\r\n                    dataNav: dataNav,\r\n                    keySelected: dataNav[0].keyID,\r\n                })\r\n            }\r\n            if (dataNav && dataNav.length > 0) {\r\n                dataNav.map((item, index) => {\r\n                    if (item.keyID == this.props.match.params.keyID) {\r\n                        this.setState({\r\n                            selected: index,\r\n                            idMacro:item.id,\r\n\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        const data = await getMacroTypeByKeyIDMacro(this.props.match.params.keyIDMacro);\r\n        console.log(data);\r\n\r\n        const dataNav = data.data;\r\n        if (data.errCode == 0 && data.data.length > 0) {\r\n            this.setState({\r\n                dataNav: dataNav,\r\n                keySelected: dataNav[0].keyID,\r\n            })\r\n        }\r\n        if (dataNav && dataNav.length > 0) {\r\n            dataNav.map((item, index) => {\r\n                if (item.keyID == this.props.match.params.keyID) {\r\n                    this.setState({\r\n                        selected: index,\r\n                        idMacro:item.id,\r\n\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    handleOnClickNav = async (item, index) => {\r\n        //console.log(item);\r\n        await this.setState({\r\n            selected: index,\r\n            keySelected: item.keyID,\r\n            idMacro: item.id,\r\n        })\r\n\r\n    }\r\n    render() {\r\n        let arrDataNav = this.state.dataNav;\r\n        //console.log(this.state)\r\n        return (\r\n            <Fragment>\r\n                    <div className='title-container'>\r\n                        <ul>\r\n                            {\r\n                                arrDataNav && arrDataNav.length > 0 && arrDataNav.map((item, index) => {\r\n                                    if (index === this.state.selected) {\r\n\r\n                                        return (\r\n                                            <li>\r\n                                                <Link className='active' to={\"/vi-mo/\" + this.props.match.params.keyIDMacro + \"/\" + item.keyID} onClick={() => this.handleOnClickNav(item, index)}>{item.title}</Link>\r\n                                            </li>\r\n                                        );\r\n                                    }\r\n                                    else {\r\n\r\n                                        return (\r\n                                            <li>\r\n                                                <Link to={\"/vi-mo/\" + this.props.match.params.keyIDMacro + \"/\" + item.keyID} onClick={() => this.handleOnClickNav(item, index)}>{item.title}</Link>\r\n                                            </li>\r\n                                        );\r\n                                    }\r\n                                })\r\n\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MacroData);\r\n","import axios from \"../axios\"\r\n\r\nconst getTableByKeyIDMactoType = (keyIDMacroType,valueType) => {\r\n    return axios.get(`/api/get-table-by-keyidmacrotype?keyIDMacroType=${keyIDMacroType}&valueType=${valueType}`);\r\n}\r\n\r\nexport {\r\n    getTableByKeyIDMactoType,\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './TableDataMacro.scss'\r\nimport { getAllQuantities } from '../../services/QuantitiesService'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Hidden } from '@material-ui/core';\r\nimport {getValueTypeByKeyIDMactoType} from '../../services/MacroTypeService'\r\nimport {getTableByKeyIDMactoType} from '../../services/TableService'\r\n\r\n\r\n\r\n\r\nclass TableDataMacro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyID: \"\",\r\n            valueTypes: null,\r\n            idMacro: -1,\r\n            selectedRadio: \"Value\",\r\n            dataTable:null,\r\n        }\r\n\r\n    }\r\n\r\n    async componentWillReceiveProps(props) {\r\n        //console.log(this.props)\r\n        let valueTypes = await getValueTypeByKeyIDMactoType(props.match.params.keyID);\r\n        const dataTable = await getTableByKeyIDMactoType(props.match.params.keyID,this.state.selectedRadio);\r\n\r\n        this.setState({\r\n            keyID: props.match.params.keyID,\r\n            idMacro: props.idMacro,\r\n            valueTypes: valueTypes,\r\n            dataTable: dataTable\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        let valueTypes = await getValueTypeByKeyIDMactoType(this.props.match.params.keyID);\r\n        const dataTable = await getTableByKeyIDMactoType(this.props.match.params.keyID,this.state.selectedRadio);\r\n        this.setState({\r\n            keyID: this.props.match.params.keyID,\r\n            valueTypes: valueTypes,\r\n            dataTable: dataTable\r\n        })\r\n    }\r\n    toggle = (e, eIDs) => {\r\n        for (let i = 0; i < eIDs.length; i++) {\r\n            if (!eIDs[i].includes(\"#\")) {\r\n                eIDs[i] = \"#\" + eIDs[i];\r\n            }\r\n\r\n        }\r\n        eIDs = eIDs.toString()\r\n        const btnID = e.currentTarget.id;\r\n        //Feed the list of ids as a selector\r\n        var theRows = document.querySelectorAll(eIDs);\r\n        // Get the button that triggered this\r\n        var theButton = document.getElementById(btnID);\r\n        // If the button is not expanded...\r\n        if (theButton.getAttribute(\"aria-expanded\") == \"false\") {\r\n            // Loop through the rows and show them\r\n            for (var i = 0; i < theRows.length; i++) {\r\n                theRows[i].classList.add(\"shown\");\r\n                theRows[i].classList.remove(\"hidden\");\r\n            }\r\n            // Now set the button to expanded\r\n            theButton.setAttribute(\"aria-expanded\", \"true\");\r\n            // Otherwise button is not expanded...\r\n        } else {\r\n            // Loop through the rows and hide them\r\n            for (var i = 0; i < theRows.length; i++) {\r\n                theRows[i].classList.add(\"hidden\");\r\n                theRows[i].classList.remove(\"shown\");\r\n            }\r\n            // Now set the button to collapsed\r\n            theButton.setAttribute(\"aria-expanded\", \"false\");\r\n        }\r\n    }\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    handleRadioChange = async (event) => {\r\n        const dataTable = await getTableByKeyIDMactoType(this.props.match.params.keyID,event.target.value);\r\n        this.setState({\r\n            selectedRadio: event.target.value,\r\n            dataTable:dataTable\r\n        });\r\n    }\r\n    handleSearch = () => {\r\n\r\n        var input, filter, table, tr, td, i, txtValue;\r\n        input = document.getElementById(\"txtSearch\");\r\n        filter = input.value.toUpperCase();\r\n        table = document.getElementById(\"cpi\");\r\n        tr = table.getElementsByTagName(\"tr\");\r\n        for (i = 0; i < tr.length; i++) {\r\n            td = tr[i].getElementsByTagName(\"td\")[0];\r\n            if (td) {\r\n                txtValue = td.textContent || td.innerText;\r\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    tr[i].style.display = \"\";\r\n                } else {\r\n                    tr[i].style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleOnClickRow = (id, data) => {\r\n\r\n    }\r\n    render() {\r\n        const collapseFlag = false;\r\n        let classHidden = \"\";\r\n        const valueTypes = this.state.valueTypes;\r\n        const dataTable = this.state.dataTable;\r\n        // console.log(this.state.dataTable);\r\n        if (collapseFlag) { classHidden = \"hidden\" }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"radio-container\">\r\n                    {\r\n                        valueTypes!=null&&valueTypes.data.length>0 ? valueTypes.data.map((valueType,valueTypeIndex) => {\r\n                            return (\r\n                                <label>\r\n                                    <input type=\"radio\" value={valueType}\r\n                                        checked={this.state.selectedRadio === valueType}\r\n                                        onChange={this.handleRadioChange} />\r\n                                    <span>{valueType}</span>\r\n                                </label>\r\n                            );\r\n                        }\r\n                        ):null\r\n                    }\r\n\r\n                    <input type=\"text\" id=\"txtSearch\" onChange={this.handleSearch} placeholder=\"Tìm chỉ số\" title=\"Type in a name\"></input>\r\n                </div>\r\n\r\n                {dataTable?\r\n                    dataTable.map((dataTable, dataTableIndex) => {\r\n                        let headerTable = dataTable.header;\r\n                        return (\r\n                            <table class=\"cell\" id={dataTable.keyID}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        {collapseFlag ? <th><span class=\"visually-hidden\">Toggle</span></th> : \"\"\r\n\r\n                                        }\r\n                                        <th className='header-title-table'>{dataTable.names.nameVi}</th>\r\n                                        {\r\n\r\n                                            headerTable.map((headerTable, headerTableIndex) => {\r\n\r\n                                                return (<th className='header-table'>{headerTable}</th>);\r\n\r\n                                            })\r\n                                        }\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {\r\n                                        dataTable.rows.map((rowLevel1, indexRow) => {\r\n                                            return (\r\n                                                <Fragment>\r\n                                                    {\r\n                                                        rowLevel1.keyID == 'all' ? \"\" :\r\n                                                            <tr className=\"bold-general\" onClick={() => this.handleOnClickRow(rowLevel1.id, rowLevel1.data)}>\r\n                                                                {collapseFlag ?\r\n                                                                    <Fragment>\r\n                                                                        <td className='td-toggle'>\r\n                                                                            <button type=\"button\"\r\n                                                                                id={rowLevel1.idChild}\r\n                                                                                aria-expanded=\"false\"\r\n                                                                                onClick={(event, eIDs) => this.toggle(event, rowLevel1.childRow)}\r\n                                                                            >\r\n                                                                                <svg xmlns=\"\\http://www.w3.org/2000/svg&quot;\" viewBox=\"0 0 80 80\" focusable=\"false\"><path d=\"M70.3 13.8L40 66.3 9.7 13.8z\"></path></svg>\r\n                                                                            </button>\r\n\r\n                                                                        </td>\r\n                                                                    </Fragment>\r\n                                                                    : \"\"\r\n                                                                }\r\n                                                                <td className=\"td-column-title\">\r\n                                                                    {rowLevel1.names.nameVi}\r\n                                                                </td>\r\n                                                                {\r\n                                                                    rowLevel1.data.map((data, indexData) => {\r\n                                                                        return (\r\n                                                                            <td className=\"td-column-value\">\r\n                                                                                {parseFloat(data.value).toFixed(2)}\r\n                                                                            </td>\r\n                                                                        );\r\n\r\n                                                                    })\r\n                                                                }\r\n                                                            </tr>\r\n                                                    }\r\n                                                    {\r\n                                                        rowLevel1.rows.map((rowLevel2, indexRow) => {\r\n                                                            if (rowLevel1.keyID == \"all\") { classHidden = \"\"; }\r\n                                                            return (\r\n                                                                <Fragment>\r\n\r\n                                                                    <tr id={rowLevel2.idChild} className={classHidden} onClick={() => this.handleOnClickRow(rowLevel2.id, rowLevel2.data)}>\r\n                                                                        {collapseFlag ? <td className='td-toggle'></td> : \"\"}\r\n                                                                        <td className=\"td-column-title\">\r\n                                                                            {rowLevel2.names.nameVi}\r\n                                                                        </td>\r\n                                                                        {\r\n                                                                            rowLevel2.data.map((data, indexData) => {\r\n                                                                                return (\r\n                                                                                    <td className=\"td-column-value\">\r\n                                                                                        {parseFloat(data.value).toFixed(2)}\r\n                                                                                    </td>\r\n                                                                                );\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </tr>\r\n                                                                    {\r\n                                                                        rowLevel2.rows.map((rowLevel3, indexRow) => {\r\n                                                                            return (\r\n                                                                                <tr id={rowLevel3.idChild} className={classHidden} onClick={() => this.handleOnClickRow(rowLevel3.id, rowLevel3.data)}>\r\n                                                                                    {collapseFlag ? <td className='td-toggle'></td> : \"\"}\r\n                                                                                    <td className=\"td-column-title padding-child-row\">\r\n                                                                                        {rowLevel3.names.nameVi}\r\n                                                                                    </td>\r\n                                                                                    {\r\n                                                                                        rowLevel3.data.map((data, indexData) => {\r\n                                                                                            return (\r\n                                                                                                <td className=\"td-column-value\">\r\n                                                                                                    {parseFloat(data.value).toFixed(2)}\r\n                                                                                                </td>\r\n                                                                                            );\r\n                                                                                        })\r\n                                                                                    }\r\n                                                                                </tr>\r\n                                                                            );\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Fragment>\r\n                                                            );\r\n\r\n                                                        })\r\n                                                    }\r\n                                                </Fragment>\r\n                                            );\r\n                                        })\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        );\r\n\r\n                    }):\"\"\r\n                }\r\n\r\n\r\n\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableDataMacro);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu } from '../Header/menuApp';\r\nimport ChartMacro from './ChartMacro';\r\nimport \"./Macro.scss\";\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Select from 'react-select'\r\nimport ItemChart from './ItemChart';\r\nimport MacroData from './MacroData';\r\nimport TableDataMacro from './TableDataMacro';\r\nconst options = [\r\n    { value: 'ALL', label: 'ALL' },\r\n    { value: '3M', label: '3M' },\r\n    { value: '6M', label: '6M' },\r\n    { value: '1y', label: '1y' },\r\n    { value: '7y', label: '7y' },\r\n    { value: '10y', label: '10y' }\r\n\r\n]\r\nconst customStyles = {\r\n\r\n};\r\nclass Macro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: '',\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"macro-header-container\">\r\n                    {/* thanh navigator */}\r\n                    <div className=\"macro-header-tabs-container\">\r\n                        <Navigator menus={adminMenu} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"macro-container\">\r\n                    <div className=\"chart-macro-container\">\r\n                        <div className=\"chart-macro-header\">\r\n                            <div className=\"select-time-scale\">\r\n                                <Select options={options} defaultValue={{ value: 'ALL', label: 'ALL' }} />\r\n                            </div>\r\n                            <div className='expand-modal-chart'>\r\n                                <i class=\"fas fa-expand-arrows-alt\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chart-macro\">\r\n                            <ChartMacro />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"item-chart-macro\">\r\n                        <ItemChart />\r\n                    </div>\r\n                </div>\r\n                <div className=\"macro-nav-container\">\r\n                    <Switch>\r\n                        <Route path=\"/vi-mo/:keyIDMacro/:keyID\" component={(MacroData)} />\r\n\r\n                    </Switch>\r\n                    <div className='table-data'>\r\n                        <Route path=\"/vi-mo/:keyIDMacro/:keyID\" component={(TableDataMacro)} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Macro);\r\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux'\n\n\n\nimport { path } from '../utils'\n\n\n\n\nimport StockMacro from '../containers/StockMacro/StockMacro';\n\nimport Header from './Header/Header';\nimport Macro from './Macro/Macro';\nclass App extends Component {\n\n    handlePersistorState = () => {\n        const { persistor } = this.props;\n        let { bootstrapped } = persistor.getState();\n        if (bootstrapped) {\n            if (this.props.onBeforeLift) {\n                Promise.resolve(this.props.onBeforeLift())\n                    .then(() => this.setState({ bootstrapped: true }))\n                    .catch(() => this.setState({ bootstrapped: true }));\n            } else {\n                this.setState({ bootstrapped: true });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.handlePersistorState();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Router history={history}>\n                    <Header />\n                    <div className=\"main-container\">\n                        <div className=\"content-container\">\n                            <Switch>\n                                <Route path={path.HOME} exact component={(StockMacro)} />\n                                <Route path={path.MACRO} component={(Macro)} />\n\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        started: state.app.started,\n        isLoggedIn: state.admin.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { IntlProvider } from \"react-intl\";\n\nimport '@formatjs/intl-pluralrules/polyfill';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/vi';\n\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\n\nimport { LanguageUtils } from '../utils'\n\nconst messages = LanguageUtils.getFlattenedMessages();\n\nclass IntlProviderWrapper extends Component {\n\n    render() {\n        const { children, language } = this.props;\n        return (\n            <IntlProvider\n                locale={language}\n                messages={messages[language]}\n                defaultLocale=\"vi\">\n                {children}\n            </IntlProvider>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language\n    };\n};\n\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles/styles.scss';\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\n\n\nimport { Provider } from 'react-redux';\nimport reduxStore, { persistor } from './redux';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={reduxStore}>\n            <IntlProviderWrapper>\n                <App persistor={persistor}/>\n            </IntlProviderWrapper>\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}